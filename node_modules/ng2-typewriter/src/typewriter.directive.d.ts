import { ElementRef, AfterViewInit, EventEmitter } from "@angular/core";
import { TypewriterContent } from "./typewriter.content";
export declare class TypewriterDirective implements AfterViewInit {
    private el;
    ngAfterViewInit(): void;
    constructor(el: ElementRef);
    private _target;
    private _loopNum;
    private _index;
    private _delay_ratio;
    private _isDeleting;
    private _text_decorated;
    private _isDone;
    private _cur;
    private _decorate_templates;
    private _default_special_class_name;
    private _regex;
    private _contents;
    private _erasable;
    private _beforeType;
    private _beforeStart;
    private _afterEnd;
    private _delay;
    private _speed;
    private _speed_clone;
    private _deletingTopSpeed;
    private _deletingAcceleration;
    isDone: EventEmitter<boolean>;
    contents: TypewriterContent[];
    erasable: boolean;
    beforeType: number;
    beforeStart: number;
    afterEnd: number;
    delay: number;
    speed: number;
    deletingAcceleration: number;
    deletingTopSpeed: number;
    private tick();
    private _deal_with_erasable(fullText);
    private _get_deleting_speed();
    private _deal_with_unerasable(fullText);
    private _show(delta, breakLine?);
    private _render(text, className?);
    private _set_decorate_templates(tc);
    private _get_word_regex(v, flag?);
    private _get_it_filled(classes, index, lastIndex, length);
    private _get_special_class_from(classes, at);
}
