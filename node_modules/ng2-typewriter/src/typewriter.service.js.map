{"version":3,"file":"typewriter.service.js","sourceRoot":"","sources":["typewriter.service.ts"],"names":[],"mappings":";;;;;;;;;AAGA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,iBAAiB,EAAE,MAAM,sBAAsB,CAAC;AAGzD,IAAa,iBAAiB;IAC1B;IAAe,CAAC;IAOT,kCAAM,GAAb,UAAe,QAAkB;QAC7B,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAE,CAAS;YAC3B,MAAM,CAAC,IAAI,iBAAiB,CAAC,CAAC,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;IACP,CAAC;IACL,wBAAC;AAAD,CAAC,AAbD,IAaC;AAbY,iBAAiB;IAD7B,UAAU,EAAE;;GACA,iBAAiB,CAa7B;SAbY,iBAAiB","sourcesContent":["/**\n * Created by gale on 17-1-22.\n */\nimport { Injectable } from \"@angular/core\";\nimport { TypewriterContent } from \"./typewriter.content\";\n\n@Injectable()\nexport class TypewriterService {\n    constructor() {}\n\n    /**\n     * Format an array of strings to an array of TypewriterContents.\n     * @param contents\n     * @returns {TypewriterContent[]}\n     */\n    public format( contents: string[] ): TypewriterContent[] {\n        return contents.map(( v: string ) => {\n            return new TypewriterContent(v);\n        });\n    }\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}