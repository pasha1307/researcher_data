{"version":3,"file":"typewriter.directive.js","sourceRoot":"","sources":["typewriter.directive.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Created by gale on 17-1-7.\n */\nimport { Directive, ElementRef, Input, AfterViewInit, Output, EventEmitter } from \"@angular/core\";\nimport { TypewriterContent } from \"./typewriter.content\";\n@Directive({\n    selector: '[g-typewriter]'\n})\n\nexport class TypewriterDirective implements AfterViewInit {\n    ngAfterViewInit(): void {\n        this._target = this.el.nativeElement.querySelector('span.wrap');\n        this._speed_clone = this._speed;\n        setTimeout(() => this.tick(), this._beforeType);\n    }\n\n    constructor( private el: ElementRef ) {}\n\n    private _target: Element;\n    private _loopNum: number = 0;\n    private _index: number = 0;\n    private _delay_ratio: number = ( Math.sqrt(5) - 1 ) / 2;\n\n    private _isDeleting: boolean = false;\n    private _text_decorated: string = '';\n\n    /**\n     * Does all contents typed out?\n     * @type {boolean}\n     * @private\n     */\n    private _isDone = false;\n    private _cur = -1;\n\n    private _decorate_templates: string[] = [];\n    private _default_special_class_name = 'special-typewriter';\n    private _regex = /[,;]$/;       // Delay if the text match this rule. In order to setting delay within a sentence.\n\n    // Configuration items.\n    private _contents: TypewriterContent[] = [];\n    private _erasable: boolean = true;\n    private _beforeType: number = 500;\n    private _beforeStart: number = 0;\n    private _afterEnd: number = 500;\n    private _delay: number = this._afterEnd * this._delay_ratio;           // Delay before type next sentence out.\n    private _speed: number = 40;\n    private _speed_clone: number = this._speed;\n    private _deletingTopSpeed: number = 10;\n    private _deletingAcceleration: number = 5;\n\n    @Output() isDone = new EventEmitter<boolean>();\n\n    @Input() set contents( contentsArray: TypewriterContent[] ) {\n        this._contents = contentsArray || this._contents;\n    }\n\n    @Input() set erasable( erasable: boolean ) {\n        this._erasable = erasable;\n    }\n\n    @Input() set beforeType( beforeType: number ) {\n        this._beforeType = Math.max(0, beforeType);\n    }\n\n    @Input() set beforeStart( beforeStart: number ) {\n        this._beforeStart = Math.max(0, beforeStart);\n    }\n\n    @Input() set afterEnd( afterEnd: number ) {\n        this._afterEnd = Math.max(0, afterEnd);\n    }\n\n    @Input() set delay( delay: number ) {\n        this._delay = Math.max(0, delay);\n    }\n\n    @Input() set speed( speed: number ) {\n        this._speed = Math.max(0, speed);\n    }\n\n    @Input() set deletingAcceleration( deletingAcceleration: number ) {\n        this._deletingAcceleration = Math.max(0, deletingAcceleration);\n    }\n\n    @Input() set deletingTopSpeed( deletingTopSpeed: number ) {\n        this._deletingTopSpeed = Math.max(0, deletingTopSpeed);\n    }\n\n    private tick(): void {\n        let i = this._loopNum % this._contents.length;\n        let tc = this._contents[ i ];\n        let fullText = tc.content;\n\n        if ( i !== this._cur ) {\n            this._cur = i;\n            this._set_decorate_templates(tc);\n        }\n\n        if ( this._erasable ) {\n            this._deal_with_erasable(fullText);\n        } else {\n            this._deal_with_unerasable(fullText);\n        }\n    }\n\n    private _deal_with_erasable( fullText: string ): void {\n        let delta = this._speed;\n\n        if ( this._isDeleting ) {\n            this._text_decorated = fullText.substring(0, this._text_decorated.length - 1);\n            delta = this._get_deleting_speed();     // Speed up.\n            if ( this._text_decorated === '' ) {\n                this._isDeleting = false;\n                this._loopNum++;\n                this._speed_clone = this._speed;\n                delta = this._beforeStart;\n            }\n        } else {\n            this._text_decorated = fullText.substring(0, this._text_decorated.length + 1);\n            if ( this._text_decorated === fullText ) {\n                delta = this._afterEnd;\n                this._isDeleting = true;\n            }\n        }\n\n        this._show(delta);\n    }\n\n    private _get_deleting_speed(): number {\n        this._speed_clone -= this._deletingAcceleration;\n        return Math.max(this._deletingTopSpeed, this._speed_clone);\n    }\n\n    private _deal_with_unerasable( fullText: string ): void {\n        let delta = this._speed;\n\n        let tick_char: string;\n        let origin_text: string;\n        let className: string;\n\n        origin_text = fullText.substring(0, this._index++);\n\n        // Decoration begin\n        tick_char = origin_text.substr(-1);\n        className = this._decorate_templates[ Math.max(0, origin_text.length - 1) ];\n        this._text_decorated += this._render(tick_char, className);\n\n        // Condition check.\n        if ( this._delay > 0 && origin_text.match(this._regex) && this._index > 1 && this._index <= fullText.length ) {\n            delta = this._delay;\n        } else if ( !this._erasable && origin_text === fullText ) {\n            this._loopNum++;\n            this._index = 0;\n            delta = this._afterEnd;\n            if ( this._loopNum < this._contents.length ) {      // Breaking line.\n                this._show(delta, true);\n                return;\n            } else {\n                this._isDone = true;\n                this.isDone.emit(this._isDone);\n            }\n        }\n\n        this._show(delta);\n    }\n\n    private _show( delta: number, breakLine?: boolean ): void {\n        this._target.innerHTML = this._text_decorated;\n        if (breakLine) {\n            this._text_decorated += '</br>';\n            this._show(delta);\n        } else if ( !this._isDone ) {\n            setTimeout(() => this.tick(), delta);\n        }\n    }\n\n    private _render( text: string, className?: string ): string {\n        return className ? '<span class=\"' + className + '\">' + text + '</span>' : text;\n    }\n\n    private _set_decorate_templates( tc: TypewriterContent ): void {\n        let fullText = tc.content;\n        let specialWords = tc.specialWords;\n        let specialClasses = tc.specialClasses;\n        let iterable = tc.iterable;\n\n        // Init it.\n        this._decorate_templates = [];\n        this._decorate_templates.length = fullText.length;\n\n        specialWords.forEach(( v, i ) => {\n            let regex: RegExp = this._get_word_regex(v, 'g');\n            if ( iterable ) {\n                while ( regex.exec(fullText) ) {\n                    this._get_it_filled(specialClasses, i, regex.lastIndex, v.length);\n                }\n            } else {\n                regex.exec(fullText);\n                this._get_it_filled(specialClasses, i, regex.lastIndex, v.length);\n            }\n        });\n    }\n\n    private _get_word_regex( v: string, flag?: string ): RegExp {\n        return flag && flag.length > 0 ? new RegExp('\\\\b' + v + '\\\\b', flag) : new RegExp('\\\\b' + v + '\\\\b');\n    }\n\n    private _get_it_filled( classes: string[], index: number, lastIndex: number, length: number ): void {\n        for ( let x = 1; x <= length; x++ ) {\n            this._decorate_templates[ lastIndex - x ] = this._get_special_class_from(classes, index);\n        }\n    }\n\n    private _get_special_class_from( classes: string[], at: number ): string {\n        if ( classes && classes.length ) {\n            if ( at > classes.length ) {\n                return classes[ 0 ];    // Taking the first one is as default choice.\n            } else {\n                return classes[ at ];\n            }\n        } else {\n            return this._default_special_class_name;\n        }\n    }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}